{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.jsx", "../app/shopify.server.js", "../app/db.server.js", "../app/root.jsx", "../app/routes/app.additional.jsx", "../app/routes/app._index.jsx", "../app/routes/auth.login/route.jsx", "../app/routes/auth.login/error.server.jsx", "../app/routes/webhooks.jsx", "../app/routes/_index/route.jsx", "../app/routes/auth.$.jsx", "../app/routes/app.jsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport isbot from \"isbot\";\nimport { addDocumentResponseHeaders } from \"./shopify.server\";\n\nconst ABORT_DELAY = 5000;\n\nexport default async function handleRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  addDocumentResponseHeaders(request, responseHeaders);\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        [callbackName]: () => {\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n          pipe(body);\n        },\n        onShellError(error) {\n          reject(error);\n        },\n        onError(error) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import \"@shopify/shopify-app-remix/adapters/node\";\nimport {\n  AppDistribution,\n  DeliveryMethod,\n  shopifyApp,\n  LATEST_API_VERSION,\n} from \"@shopify/shopify-app-remix/server\";\nimport { PrismaSessionStorage } from \"@shopify/shopify-app-session-storage-prisma\";\nimport { restResources } from \"@shopify/shopify-api/rest/admin/2023-10\";\nimport prisma from \"./db.server\";\n\nconst shopify = shopifyApp({\n  apiKey: process.env.SHOPIFY_API_KEY,\n  apiSecretKey: process.env.SHOPIFY_API_SECRET || \"\",\n  apiVersion: LATEST_API_VERSION,\n  scopes: process.env.SCOPES?.split(\",\"),\n  appUrl: process.env.SHOPIFY_APP_URL || \"\",\n  authPathPrefix: \"/auth\",\n  sessionStorage: new PrismaSessionStorage(prisma),\n  distribution: AppDistribution.AppStore,\n  restResources,\n  webhooks: {\n    APP_UNINSTALLED: {\n      deliveryMethod: DeliveryMethod.Http,\n      callbackUrl: \"/webhooks\",\n    },\n  },\n  hooks: {\n    afterAuth: async ({ session }) => {\n      shopify.registerWebhooks({ session });\n    },\n  },\n  future: {\n    v3_webhookAdminContext: true,\n    v3_authenticatePublic: true,\n  },\n  ...(process.env.SHOP_CUSTOM_DOMAIN\n    ? { customShopDomains: [process.env.SHOP_CUSTOM_DOMAIN] }\n    : {}),\n});\n\nexport default shopify;\nexport const apiVersion = LATEST_API_VERSION;\nexport const addDocumentResponseHeaders = shopify.addDocumentResponseHeaders;\nexport const authenticate = shopify.authenticate;\nexport const unauthenticated = shopify.unauthenticated;\nexport const login = shopify.login;\nexport const registerWebhooks = shopify.registerWebhooks;\nexport const sessionStorage = shopify.sessionStorage;\n", "import { PrismaClient } from \"@prisma/client\";\n\nconst prisma = global.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") {\n  if (!global.prisma) {\n    global.prisma = new PrismaClient();\n  }\n}\n\nexport default prisma;\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport default function App() {\n  return (\n    <html>\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <LiveReload />\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n", "import {\n  Box,\n  Card,\n  Layout,\n  Link,\n  List,\n  Page,\n  Text,\n  BlockStack,\n} from \"@shopify/polaris\";\n\nexport default function AdditionalPage() {\n  return (\n    <Page>\n      <ui-title-bar title=\"Additional page\" />\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <BlockStack gap=\"300\">\n              <Text as=\"p\" variant=\"bodyMd\">\n                The app template comes with an additional page which\n                demonstrates how to create multiple pages within app navigation\n                using{\" \"}\n                <Link\n                  url=\"https://shopify.dev/docs/apps/tools/app-bridge\"\n                  target=\"_blank\"\n                  removeUnderline\n                >\n                  App Bridge\n                </Link>\n                .\n              </Text>\n              <Text as=\"p\" variant=\"bodyMd\">\n                To create your own page and have it show up in the app\n                navigation, add a page inside <Code>app/routes</Code>, and a\n                link to it in the <Code>&lt;ui-nav-menu&gt;</Code> component\n                found in <Code>app/routes/app.jsx</Code>.\n              </Text>\n            </BlockStack>\n          </Card>\n        </Layout.Section>\n        <Layout.Section variant=\"oneThird\">\n          <Card>\n            <BlockStack gap=\"200\">\n              <Text as=\"h2\" variant=\"headingMd\">\n                Resources\n              </Text>\n              <List>\n                <List.Item>\n                  <Link\n                    url=\"https://shopify.dev/docs/apps/design-guidelines/navigation#app-nav\"\n                    target=\"_blank\"\n                    removeUnderline\n                  >\n                    App nav best practices\n                  </Link>\n                </List.Item>\n              </List>\n            </BlockStack>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\nfunction Code({ children }) {\n  return (\n    <Box\n      as=\"span\"\n      padding=\"025\"\n      paddingInlineStart=\"100\"\n      paddingInlineEnd=\"100\"\n      background=\"bg-surface-active\"\n      borderWidth=\"025\"\n      borderColor=\"border\"\n      borderRadius=\"100\"\n    >\n      <code>{children}</code>\n    </Box>\n  );\n}\n", "import { useState, useCallback } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport { useActionData, useNavigation, useSubmit } from \"@remix-run/react\";\nimport { Page, Layout, Text, Card, Button, BlockStack, Box, List, Link, InlineStack, ResourceList, ResourceItem, Avatar,   TextField, LegacyFilters, Pagination} from \"@shopify/polaris\";\nimport { authenticate } from \"../shopify.server\";\n\nfunction sortByField(a, b, field) {\n  // Convert field values to numbers for ID\n  const valueA = field === 'id' ? parseInt(a[field], 10) : a[field];\n  const valueB = field === 'id' ? parseInt(b[field], 10) : b[field];\n\n  if (valueA < valueB) {\n    return -1;\n  }\n  if (valueA > valueB) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction isEmpty(value) {\n  if (Array.isArray(value)) {\n    return value.length === 0;\n  } else {\n    return value === '' || value == null;\n  }\n}\n\nexport const loader = async ({ request }) => {\n  await authenticate.admin(request);\n\n  return null;\n};\n\nexport const action = async ({ request }) => {\n  const { admin } = await authenticate.admin(request);\n\n  const response = await admin.graphql(\n    `query {\n      products(first: 20, reverse: true) {\n        edges {\n          node {\n            id\n            title\n            handle\n            description\n            status\n          }\n        }\n      }\n    }`,\n  );\n  const responseJson = await response.json();\n\n  return json({\n    product: responseJson.data.products.edges,\n  });\n};\n\nexport default function Index() {\n  const nav = useNavigation();\n  const actionData = useActionData();\n  const submit = useSubmit();\n  const isLoading = [\"loading\", \"submitting\"].includes(nav.state) && nav.formMethod === \"POST\";\n  const [sortValue, setSortValue] = useState('Id');\n  const [sortedProducts, setSortedProducts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 2; // Set the number of items per page\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n\n  //need to resource filter\n  const [sortDescription, setSortDescription] = useState('gift');\n  const [queryValue, setQueryValue] = useState(undefined);\n  const [sortStatus, setSortStatus] = useState('');\n\n  const handlePageChange = useCallback((newPage) => setCurrentPage(newPage), []);\n  const handleTaggedWithChange = useCallback((value) => setSortDescription(value), []);\n  const handleTaggedWithRemove = useCallback(() => setSortDescription(undefined), []);\n  const handleQueryValueRemove = useCallback(() => setQueryValue(undefined), []);\n  const handleSortLocationChange = useCallback((value) => setSortStatus(value), []);\n  const handleSortLocationRemove = useCallback(() => setSortStatus(undefined), []);\n  const handleClearAll = useCallback(() => { handleTaggedWithRemove(); handleQueryValueRemove(); handleSortLocationRemove(); setCurrentPage(1); }, [handleQueryValueRemove, handleTaggedWithRemove, handleSortLocationRemove]);\n\n  const filters = [\n    {\n      key: 'sortDescription',\n      label: 'Sort by description',\n      filter: (\n        <TextField\n          label=\"Sort by description\"\n          value={sortDescription}\n          onChange={handleTaggedWithChange}\n          autoComplete=\"off\"\n          labelHidden\n        />\n      ),\n      shortcut: true,\n    },\n    {\n      key: 'sortStatus',\n      label: 'Sort by status',\n      filter: (\n        <TextField\n          label=\"Sort by status\"\n          value={sortStatus}\n          onChange={handleSortLocationChange}\n          autoComplete=\"off\"\n          labelHidden\n        />\n      ),\n      shortcut: true,\n    },\n  ];\n\n  const appliedFilters = [\n    ...(sortDescription && !isEmpty(sortDescription)\n      ? [\n          {\n            key: 'taggedWith1',\n            label: `Sort by description: ${sortDescription}`,\n            onRemove: handleTaggedWithRemove,\n          },\n        ]\n      : []),\n    ...(queryValue && !isEmpty(queryValue)\n      ? [\n          {\n            key: 'name',\n            label: `Name: ${queryValue}`,\n            onRemove: handleQueryValueRemove,\n          },\n        ]\n      : []),\n    ...(sortStatus && !isEmpty(sortStatus)\n      ? [\n          {\n            key: 'sortLocation',\n            label: `Sort by status: ${sortStatus}`,\n            onRemove: handleSortLocationRemove,\n          },\n        ]\n      : []),\n  ];\n\n  function filterProducts(item){\n      const nameMatch = item.node.title.toLowerCase().includes(queryValue?.toLowerCase() || '');\n      const taggedWithMatch = item.node.description.toLowerCase().includes(sortDescription?.toLowerCase() || '');\n      const locationMatch = item.node.status.toLowerCase().includes(sortStatus?.toLowerCase() || '');\n      return nameMatch && taggedWithMatch && locationMatch;\n  }\n\n\n  const generateProduct = () => submit({}, { replace: true, method: \"POST\" });\n\n  return (\n    <Page>\n      <ui-title-bar title=\"App created by Igor\">\n        <button variant=\"primary\" onClick={generateProduct}>\n          Show products\n        </button>\n      </ui-title-bar>\n      <BlockStack gap=\"500\">\n        <Layout>\n          <Layout.Section>\n            <Card>\n              <BlockStack gap=\"500\">\n                <BlockStack gap=\"200\">\n                  <Text as=\"h2\" variant=\"headingMd\">\n                  Now you can show all products \uD83C\uDF89\n                  </Text>\n                  <Text variant=\"bodyMd\" as=\"p\">\n                    You can sort it or filter with pagination\n                  </Text>\n                </BlockStack>\n                <InlineStack gap=\"300\">\n                  <Button loading={isLoading} onClick={generateProduct}>\n                  Show products\n                  </Button>\n                </InlineStack>\n\n                {//simple resource list\n                }\n                {actionData?.product && (\n                  <ResourceList\n                    resourceName={{singular: 'customer', plural: 'products'}}\n                    items={actionData.product}\n                    renderItem={(item) => {\n                      const {id, title, handle, status} = item.node;\n                      const media = <Avatar customer size=\"md\" />;\n\n                      return (\n                        <ResourceItem\n                          id={id}\n                          url={title}\n                          media={media}\n                          accessibilityLabel={`View details for ${title}`}\n                        >\n                          <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                            {title}\n                          </Text>\n                          <div>{`Id = `+id}</div>\n                          <div>{`Handle = `+handle}</div>\n                          <div>{`Status = `+status}</div>\n                        </ResourceItem>\n                      );\n                    }}\n                  />\n                )}\n\n\n                {//resource with sort\n                }\n                {actionData?.product && (\n                  <ResourceList\n                    resourceName={{singular: 'customer', plural: 'products'}}\n                    items={sortedProducts.length > 0 ? sortedProducts : actionData.product}\n\n                    renderItem={(item) => {\n                      const {id, title, handle, status} = item.node;\n                      const media = <Avatar customer size=\"md\" />;\n\n                      return (\n                        <ResourceItem\n                          id={id}\n                          url={title}\n                          media={media}\n                          accessibilityLabel={`View details for ${title}`}\n                        >\n                          <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                            {title}\n                          </Text>\n                          <div>{`Id = `+id}</div>\n                          <div>{`Handle = `+handle}</div>\n                          <div>{`Status = `+status}</div>\n                        </ResourceItem>\n                      );\n                    }}\n                    sortValue={sortValue}\n                    sortOptions={[\n                      { label: 'id', value: 'id' },\n                      { label: 'title', value: 'title' },\n                    ]}\n                    onSortChange={(selected) => {\n                      // Clone the original array to avoid modifying the original state directly\n                      const sortedCopy = [...actionData.product];\n\n                      // Sort the array based on the selected field\n                      sortedCopy.sort((a, b) => sortByField(a.node, b.node, selected));\n\n                      // Update the state with the sorted array and the selected sort value\n                      setSortedProducts(sortedCopy);\n                      setSortValue(selected);\n                    }}\n                  />\n                )}\n\n\n                {//resource list with filter and pagination\n                }\n                {actionData?.product && (\n                  <>\n                  <ResourceList\n                    resourceName={{singular: 'customer', plural: 'products'}}\n                    items={actionData.product.filter((item) => { return filterProducts(item) }).slice(startIndex, endIndex)}// enables filter to the products and slice it to the pages\n\n                    renderItem={(item) => {\n                      const {id, title, handle, status} = item.node;\n                      const media = <Avatar customer size=\"md\" />;\n\n                      return (\n                        <ResourceItem\n                          id={id}\n                          url={title}\n                          media={media}\n                          accessibilityLabel={`View details for ${title}`}\n                        >\n                          <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                            {title}\n                          </Text>\n                          <div>{`Id = `+id}</div>\n                          <div>{`Handle = `+handle}</div>\n                          <div>{`Status = `+status}</div>\n                        </ResourceItem>\n                      );\n                    }}\n                    filterControl={(\n                      <LegacyFilters\n                        queryValue={queryValue}\n                        filters={filters}\n                        appliedFilters={appliedFilters}\n                        onQueryChange={setQueryValue}\n                        onQueryClear={handleQueryValueRemove}\n                        onClearAll={handleClearAll}\n                      >\n                        <div style={{ paddingLeft: '8px' }}>\n                          <Button onClick={() => console.log('New filter saved')}>Save</Button>\n                        </div>\n                      </LegacyFilters>\n                    )}\n                  />\n                  <Pagination\n                    hasPrevious={currentPage > 1}\n                    hasNext={currentPage < Math.ceil((actionData.product.filter((item)=>{return filterProducts(item)}).length) / itemsPerPage)} //Math.ceil... calculates totalPages\n                    onPrevious={() => handlePageChange(currentPage - 1)}\n                    onNext={() => handlePageChange(currentPage + 1)}\n                  />\n                  </>\n                )}\n\n\n\n                {actionData?.product && (\n                  <Box\n                    padding=\"400\"\n                    background=\"bg-surface-active\"\n                    borderWidth=\"025\"\n                    borderRadius=\"200\"\n                    borderColor=\"border\"\n                    overflowX=\"scroll\"\n                  >\n                    <pre style={{ margin: 0 }}>\n                      <code>{JSON.stringify(actionData.product, null, 2)}</code>\n                    </pre>\n                  </Box>\n                )}\n              </BlockStack>\n            </Card>\n          </Layout.Section>\n          <Layout.Section variant=\"oneThird\">\n            <BlockStack gap=\"500\">\n              <Card>\n                <BlockStack gap=\"200\">\n                  <Text as=\"h2\" variant=\"headingMd\">\n                    App template specs\n                  </Text>\n                  <BlockStack gap=\"200\">\n                    <InlineStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        Framework\n                      </Text>\n                      <Link\n                        url=\"https://remix.run\"\n                        target=\"_blank\"\n                        removeUnderline\n                      >\n                        Remix\n                      </Link>\n                    </InlineStack>\n                    <InlineStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        Database\n                      </Text>\n                      <Link\n                        url=\"https://www.prisma.io/\"\n                        target=\"_blank\"\n                        removeUnderline\n                      >\n                        Prisma\n                      </Link>\n                    </InlineStack>\n                    <InlineStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        Interface\n                      </Text>\n                      <span>\n                        <Link\n                          url=\"https://polaris.shopify.com\"\n                          target=\"_blank\"\n                          removeUnderline\n                        >\n                          Polaris\n                        </Link>\n                        {\", \"}\n                        <Link\n                          url=\"https://shopify.dev/docs/apps/tools/app-bridge\"\n                          target=\"_blank\"\n                          removeUnderline\n                        >\n                          App Bridge\n                        </Link>\n                      </span>\n                    </InlineStack>\n                    <InlineStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        API\n                      </Text>\n                      <Link\n                        url=\"https://shopify.dev/docs/api/admin-graphql\"\n                        target=\"_blank\"\n                        removeUnderline\n                      >\n                        GraphQL API\n                      </Link>\n                    </InlineStack>\n                  </BlockStack>\n                </BlockStack>\n              </Card>\n              <Card>\n                <BlockStack gap=\"200\">\n                  <Text as=\"h2\" variant=\"headingMd\">\n                    Next steps\n                  </Text>\n                  <List>\n                    <List.Item>\n                      Build an{\" \"}\n                      <Link\n                        url=\"https://shopify.dev/docs/apps/getting-started/build-app-example\"\n                        target=\"_blank\"\n                        removeUnderline\n                      >\n                        {\" \"}\n                        example app\n                      </Link>{\" \"}\n                      to get started\n                    </List.Item>\n                    <List.Item>\n                      Explore Shopify\u2019s API with{\" \"}\n                      <Link\n                        url=\"https://shopify.dev/docs/apps/tools/graphiql-admin-api\"\n                        target=\"_blank\"\n                        removeUnderline\n                      >\n                        GraphiQL\n                      </Link>\n                    </List.Item>\n                  </List>\n                </BlockStack>\n              </Card>\n            </BlockStack>\n          </Layout.Section>\n        </Layout>\n      </BlockStack>\n    </Page>\n  );\n}\n", "import { useState } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport {\n  AppProvider as PolarisAppProvider,\n  Button,\n  Card,\n  FormLayout,\n  Page,\n  Text,\n  TextField } from\n\"@shopify/polaris\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport polarisStyles from \"@shopify/polaris/build/esm/styles.css\";\nimport { login } from \"../../shopify.server\";\nimport { loginErrorMessage } from \"./error.server\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: polarisStyles }];\n\nexport const loader = async ({ request }) => {\n  const errors = loginErrorMessage(await login(request));\n\n  return json({\n    errors,\n    polarisTranslations: require(`@shopify/polaris/locales/en.json`)\n  });\n};\n\nexport const action = async ({ request }) => {\n  const errors = loginErrorMessage(await login(request));\n\n  return json({\n    errors\n  });\n};\n\nexport default function Auth() {\n  const loaderData = useLoaderData();\n  const actionData = useActionData();\n  const [shop, setShop] = useState(\"\");\n  const { errors } = actionData || loaderData;\n\n  return (\n    <PolarisAppProvider i18n={loaderData.polarisTranslations}>\n      <Page>\n        <Card>\n          <Form method=\"post\">\n            <FormLayout>\n              <Text variant=\"headingMd\" as=\"h2\">\n                Log in\n              </Text>\n              <TextField\n                type=\"text\"\n                name=\"shop\"\n                label=\"Shop domain\"\n                helpText=\"example.myshopify.com\"\n                value={shop}\n                onChange={setShop}\n                autoComplete=\"on\"\n                error={errors.shop} />\n\n              <Button submit>Log in</Button>\n            </FormLayout>\n          </Form>\n        </Card>\n      </Page>\n    </PolarisAppProvider>);\n\n}", "import { LoginErrorType } from \"@shopify/shopify-app-remix/server\";\n\nexport function loginErrorMessage(loginErrors) {\n  if (loginErrors?.shop === LoginErrorType.MissingShop) {\n    return { shop: \"Please enter your shop domain to log in\" };\n  } else if (loginErrors?.shop === LoginErrorType.InvalidShop) {\n    return { shop: \"Please enter a valid shop domain to log in\" };\n  }\n\n  return {};\n}\n", "import { authenticate } from \"../shopify.server\";\nimport db from \"../db.server\";\n\nexport const action = async ({ request }) => {\n  const { topic, shop, session, admin, payload } = await authenticate.webhook(\n    request\n  );\n\n  if (!admin) {\n    // The admin context isn't returned if the webhook fired after a shop was uninstalled.\n    throw new Response();\n  }\n\n  switch (topic) {\n    case \"APP_UNINSTALLED\":\n      if (session) {\n        await db.session.deleteMany({ where: { shop } });\n      }\n\n      break;\n    case \"CUSTOMERS_DATA_REQUEST\":\n    case \"CUSTOMERS_REDACT\":\n    case \"SHOP_REDACT\":\n    default:\n      throw new Response(\"Unhandled webhook topic\", { status: 404 });\n  }\n\n  throw new Response();\n};\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport { login } from \"../../shopify.server\";\nimport indexStyles from \"./style.css\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: indexStyles }];\n\nexport const loader = async ({ request }) => {\n  const url = new URL(request.url);\n\n  if (url.searchParams.get(\"shop\")) {\n    throw redirect(`/app?${url.searchParams.toString()}`);\n  }\n\n  return json({ showForm: Boolean(login) });\n};\n\nexport default function App() {\n  const { showForm } = useLoaderData();\n\n  return (\n    <div className=\"index\">\n      <div className=\"content\">\n        <h1>A short heading about [your app]</h1>\n        <p>A tagline about [your app] that describes your value proposition.</p>\n        {showForm &&\n        <Form method=\"post\" action=\"/auth/login\">\n            <label>\n              <span>Shop domain</span>\n              <input type=\"text\" name=\"shop\" />\n              <span>e.g: my-shop-domain.myshopify.com</span>\n            </label>\n            <button type=\"submit\">Log in</button>\n          </Form>}\n\n        <ul>\n          <li>\n            <strong>Product feature</strong>. Some detail about your feature and\n            its benefit to your customer.\n          </li>\n          <li>\n            <strong>Product feature</strong>. Some detail about your feature and\n            its benefit to your customer.\n          </li>\n          <li>\n            <strong>Product feature</strong>. Some detail about your feature and\n            its benefit to your customer.\n          </li>\n        </ul>\n      </div>\n    </div>);\n\n}", "import { authenticate } from \"../shopify.server\";\n\nexport const loader = async ({ request }) => {\n  await authenticate.admin(request);\n\n  return null;\n};\n", "import { json } from \"@remix-run/node\";\nimport { Link, Outlet, useLoaderData, useRouteError } from \"@remix-run/react\";\nimport polarisStyles from \"@shopify/polaris/build/esm/styles.css\";\nimport { boundary } from \"@shopify/shopify-app-remix/server\";\nimport { AppProvider } from \"@shopify/shopify-app-remix/react\";\nimport { authenticate } from \"../shopify.server\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: polarisStyles }];\n\nexport const loader = async ({ request }) => {\n  await authenticate.admin(request);\n\n  return json({ apiKey: process.env.SHOPIFY_API_KEY || \"\" });\n};\n\nexport default function App() {\n  const { apiKey } = useLoaderData();\n\n  return (\n    <AppProvider isEmbeddedApp apiKey={apiKey}>\n      <ui-nav-menu>\n        <Link to=\"/app\" rel=\"home\">\n          Home\n        </Link>\n        <Link to=\"/app/additional\">Additional page</Link>\n      </ui-nav-menu>\n      <Outlet />\n    </AppProvider>);\n\n}\n\n// Shopify needs Remix to catch some thrown responses, so that their headers are included in the response.\nexport function ErrorBoundary() {\n  return boundary.error(useRouteError());\n}\n\nexport const headers = (headersArgs) => {\n  return boundary.headers(headersArgs);\n};", "export default {'entry':{'module':'/build/entry.client-M2DFRCUU.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-4A2TBT2S.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-ZV4HHTYV.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-N6G35W3X.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-SJ6P2KJA.js','imports':['/build/_shared/chunk-3GJP5LZF.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/app':{'id':'routes/app','parentId':'root','path':'app','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app-2KK32S6E.js','imports':['/build/_shared/chunk-NMZL6IDN.js','/build/_shared/chunk-SU66BP3D.js','/build/_shared/chunk-MIBD2XN6.js','/build/_shared/chunk-DTVQRXNR.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':true},'routes/app._index':{'id':'routes/app._index','parentId':'routes/app','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/app._index-3PMNSBD4.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/app.additional':{'id':'routes/app.additional','parentId':'routes/app','path':'additional','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.additional-AC7P53SO.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/auth.$':{'id':'routes/auth.$','parentId':'root','path':'auth/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.$-4B5WQABX.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/auth.login':{'id':'routes/auth.login','parentId':'root','path':'auth/login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.login-22IPHN2P.js','imports':['/build/_shared/chunk-MIBD2XN6.js','/build/_shared/chunk-DTVQRXNR.js','/build/_shared/chunk-3GJP5LZF.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/webhooks':{'id':'routes/webhooks','parentId':'root','path':'webhooks','index':undefined,'caseSensitive':undefined,'module':'/build/routes/webhooks-JFV2P4HI.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false}},'version':'a3ab529f','hmr':{'runtime':'/build/_shared/chunk-ZV4HHTYV.js','timestamp':1700581259257},'url':'/build/manifest-A3AB529F.js'};", "\nimport * as entryServer from \"/home/igork/DevIT/First_Proj/Shopify/oauth/app/entry.server.jsx\";\nimport * as route0 from \"./root.jsx\";\nimport * as route1 from \"./routes/app.additional.jsx\";\nimport * as route2 from \"./routes/app._index.jsx\";\nimport * as route3 from \"./routes/auth.login/route.jsx\";\nimport * as route4 from \"./routes/webhooks.jsx\";\nimport * as route5 from \"./routes/_index/route.jsx\";\nimport * as route6 from \"./routes/auth.$.jsx\";\nimport * as route7 from \"./routes/app.jsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/app.additional\": {\n      id: \"routes/app.additional\",\n      parentId: \"routes/app\",\n      path: \"additional\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/app._index\": {\n      id: \"routes/app._index\",\n      parentId: \"routes/app\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/auth.login\": {\n      id: \"routes/auth.login\",\n      parentId: \"root\",\n      path: \"auth/login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/webhooks\": {\n      id: \"routes/webhooks\",\n      parentId: \"root\",\n      path: \"webhooks\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/auth.$\": {\n      id: \"routes/auth.$\",\n      parentId: \"root\",\n      path: \"auth/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/app\": {\n      id: \"routes/app\",\n      parentId: \"root\",\n      path: \"app\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };"],
  "mappings": "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",
  "names": ["import_server", "import_node", "isbot", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_node", "import_polaris", "import_jsx_dev_runtime", "action", "loader", "import_react", "import_node", "import_polaris", "import_server", "import_jsx_dev_runtime", "loader", "action", "PolarisAppProvider", "action", "action", "route_exports", "App", "links", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "links", "loader", "App", "loader", "loader", "App", "links", "loader", "import_node", "import_react", "import_server", "import_react", "import_jsx_dev_runtime", "links", "loader", "App", "route_exports"]
}
